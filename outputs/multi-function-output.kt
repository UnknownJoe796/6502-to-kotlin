// Decompiled from: assembly
// Generated by 6502-to-Kotlin decompiler
// This is quick & dirty output - functional but not idiomatic

@file:Suppress("UNUSED_VARIABLE", "UNUSED_PARAMETER", "UNREACHABLE_CODE", "VARIABLE_WITH_REDUNDANT_INITIALIZER")
package decompiled

// 64KB address space
val memory = ByteArray(65536)

// CPU registers
var A = 0  // Accumulator
var X = 0  // Index X
var Y = 0  // Index Y
var SP = 0xFF  // Stack pointer

// CPU flags
var flagN = false  // Negative
var flagV = false  // Overflow
var flagZ = false  // Zero
var flagC = false  // Carry

fun Init() {
    // LDA #$00
    A = 0x0
    // STA $0200
    memory[/* $0200 */] = A
    // JSR ProcessData
    // RTS
    return
}

fun ProcessData() {
    // LDA $0200
    A = memory[/* $0200 */]
    // ADC #$01
    A = (A + 0x1 + (if (flagC) 1 else 0)) and 0xFF
    // STA $0200
    memory[/* $0200 */] = A
    // RTS
    return
}

fun GetValue() {
    // LDA $0200
    A = memory[/* $0200 */]
    // RTS
    return
}

