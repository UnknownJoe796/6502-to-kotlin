================================================================================
SUPER MARIO BROS - DEAD CODE ANALYSIS
================================================================================

SUMMARY
--------------------------------------------------------------------------------
Total constants defined: 535
Total memory locations accessed: 1557
Entry points discovered: 469
Functions analyzed: 296

UNUSED CONSTANTS (53 total)
--------------------------------------------------------------------------------
These constants are defined but never accessed in reachable code:

PPU Registers ($2000-$2007): 1 unused constants
  $2004  PPU_SPR_DATA
           PPU_SPR_DATA          = $2004

APU/IO Registers ($4000-$4017): 1 unused constants
  $4010  SND_DELTA_REG
           SND_DELTA_REG         = $4010

NES RAM ($0200-$07FF): 34 unused constants
  $0364  BowserFeetCounter
           BowserFeetCounter     = $0364
  $0365  BowserMovementSpeed
           BowserMovementSpeed   = $0365
  $0366  BowserOrigXPos
           BowserOrigXPos        = $0366
  $0368  BowserFront_Offset
           BowserFront_Offset    = $0368
  $0369  BridgeCollapseOffset
           BridgeCollapseOffset  = $0369
  $0399  VineHeight
           VineHeight            = $0399
  $03A0  BalPlatformAlignment
           BalPlatformAlignment  = $03a0
  $046A  Cannon_Offset
           Cannon_Offset         = $046a
  $046A  Whirlpool_Offset
           Whirlpool_Offset      = $046a
  $0500  Block_Buffer_1
           Block_Buffer_1        = $0500
  $05D0  Block_Buffer_2
           Block_Buffer_2        = $05d0
  $06A0  BlockBufferColumnPos
           BlockBufferColumnPos  = $06a0
  $06D7  FireworksCounter
           FireworksCounter      = $06d7
  $06DC  MaxRangeFromOrigin
           MaxRangeFromOrigin    = $06dc
  $06DD  BitMFilter
           BitMFilter            = $06dd
  $06FD  SavedJoypad2Bits
           SavedJoypad2Bits      = $06fd
  $0719  PrimaryMsgCounter
           PrimaryMsgCounter     = $0719
  $071E  ColumnSets
           ColumnSets            = $071e
  $0734  StaircaseControl
           StaircaseControl      = $0734
  $0736  MushroomLedgeHalfLen
           MushroomLedgeHalfLen  = $0736
  $0746  StarFlagTaskControl
           StarFlagTaskControl   = $0746
  $0749  SecondaryMsgCounter
           SecondaryMsgCounter   = $0749
  $075B  HalfwayPage
           HalfwayPage           = $075b
  $0762  OffScr_HalfwayPage
           OffScr_HalfwayPage    = $0762
  $0763  OffScr_LevelNumber
           OffScr_LevelNumber    = $0763
  $0764  OffScr_Hidden1UpFlag
           OffScr_Hidden1UpFlag  = $0764
  $0765  OffScr_CoinTally
           OffScr_CoinTally      = $0765
  $0768  ScrollFractional
           ScrollFractional      = $0768
  $0769  DisableIntermediate
           DisableIntermediate   = $0769
  $076B  WorldSelectNumber
           WorldSelectNumber     = $076b
  $0790  BowserFireBreathTimer
           BowserFireBreathTimer = $0790
  $07A1  WorldEndTimer
           WorldEndTimer         = $07a1
  $07A2  DemoTimer
           DemoTimer             = $07a2
  $07FC  WorldSelectEnableFlag
           WorldSelectEnableFlag = $07fc

Zero Page ($00-$FF): 16 unused constants
  $0010  GreenParatroopaFly
           GreenParatroopaFly    = $10
  $0011  Lakitu
           Lakitu                = $11
  $0012  Spiny
           Spiny                 = $12
  $0014  FlyCheepCheepFrenzy
           FlyCheepCheepFrenzy   = $14
  $0014  FlyingCheepCheep
           FlyingCheepCheep      = $14
  $0015  BowserFlame
           BowserFlame           = $15
  $0017  BBill_CCheep_Frenzy
           BBill_CCheep_Frenzy   = $17
  $0018  Stop_Frenzy
           Stop_Frenzy           = $18
  $002D  Bowser
           Bowser                = $2d
  $002E  PowerUpObject
           PowerUpObject         = $2e
  $002F  VineObject
           VineObject            = $2f
  $0030  FlagpoleFlagObject
           FlagpoleFlagObject    = $30
  $0031  StarFlagObject
           StarFlagObject        = $31
  $0032  JumpspringObject
           JumpspringObject      = $32
  $0035  VictoryWalkControl
           VictoryWalkControl    = $35
  $0035  RetainerObject
           RetainerObject        = $35

High RAM ($0800-$1FFF): 1 unused constants
  $1EC0  TitleScreenDataOffset
           TitleScreenDataOffset = $1ec0

INDIRECTLY REACHABLE CODE (0 labels)
--------------------------------------------------------------------------------
These labels are not reached via static analysis (JSR/branches).
They may be reached via jump tables, function pointers, or other indirect calls:

  (All labeled code is reachable)

READ-ONLY MEMORY LOCATIONS (1239 total)
--------------------------------------------------------------------------------
These locations are read but never written (may be ROM data or constants):

Other: 1 read-only locations
  $2002  (PPU_STATUS)  reads: 8

ROM: 1200 read-only locations
  $800A  (VBlank1)  reads: 1
  $800F  (VBlank2)  reads: 1
  $8018  (WBootCheck)  reads: 1
  $802B  (ColdBoot)  reads: 2
  $8057  (EndlessLoop)  reads: 1
  $805A  (VRAM_AddrTable_Low)  reads: 1
  $806D  (VRAM_AddrTable_High)  reads: 1
  $8080  (VRAM_Buffer_Offset)  reads: 1
  $809E  (ScreenOff)  reads: 1
  $80D0  (InitBuffer)  reads: 1
  $8100  (DecTimers)  reads: 1
  $810E  (DecTimersLoop)  reads: 2
  $8116  (SkipExpTimer)  reads: 1
  $8119  (NoDecTimers)  reads: 1
  $811C  (PauseSkip)  reads: 1
  $8132  (RotPRandomBit)  reads: 2
  $813E  (Sprite0Clr)  reads: 1
  $8151  (Sprite0Hit)  reads: 2
  $815A  (HBlankDelay)  reads: 1
  $815D  (SkipSprite0)  reads: 1
  ... and 1180 more

NES RAM: 36 read-only locations
  $0363  (BowserBodyControls)  reads: 2
  $0388  (FirebarSpinSpeed)  reads: 1
  $03AF  (Fireball_Rel_XPos)  reads: 2
  $03B0  (Bubble_Rel_XPos)  reads: 1
  $03B1  (Block_Rel_XPos)  reads: 3
  $03B3  (Misc_Rel_XPos)  reads: 3
  $03B9  (Enemy_Rel_YPos)  reads: 7
  $03BA  (Fireball_Rel_YPos)  reads: 2
  $03BB  (Bubble_Rel_YPos)  reads: 1
  $03BC  (Block_Rel_YPos)  reads: 2
  $03BE  (Misc_Rel_YPos)  reads: 1
  $03D1  (Enemy_OffscreenBits)  reads: 9
  $03D2  (FBall_OffscreenBits)  reads: 1
  $03D3  (Bubble_OffscreenBits)  reads: 1
  $03D4  (Block_OffscreenBits)  reads: 3
  $03D6  (Misc_OffscreenBits)  reads: 2
  $046B  (Cannon_PageLoc)  reads: 5
  $0471  (Cannon_X_Position)  reads: 4
  $0477  (Cannon_Y_Position)  reads: 3
  $06CC  (SecondaryHardMode)  reads: 6
  ... and 16 more

Zero Page: 2 read-only locations
  $0034  (DestinationPageLoc)  reads: 1
  $0039  (PowerUpType)  reads: 2

WRITE-ONLY MEMORY LOCATIONS (68 total)
--------------------------------------------------------------------------------
These locations are written but never read (potentially dead stores):

  $003C  (HammerBroJumpTimer)  writes: 1
  $005E  (Fireball_X_Speed)  writes: 1
  $0060  (Block_X_Speed)  writes: 2
  $0074  (Fireball_PageLoc)  writes: 1
  $0083  (Bubble_PageLoc)  writes: 1
  $008D  (Fireball_X_Position)  writes: 1
  $009C  (Bubble_X_Position)  writes: 1
  $00A8  (Block_Y_Speed)  writes: 3
  $00BC  (Fireball_Y_HighPos)  writes: 1
  $00C2  (Misc_Y_HighPos)  writes: 2
  $00CB  (Bubble_Y_HighPos)  writes: 1
  $00EA  (EnemyDataHigh)  writes: 1
  $00F6  (MusicDataHigh)  writes: 1
  $0341  (VRAM_Buffer2)  writes: 2
  $03F0  (Block_ResidualCounter)  writes: 1
  $043C  (Block_Y_MoveForce)  writes: 2
  $0483  (BowserHitPoints)  writes: 1
  $049A  (Enemy_BoundBoxCtrl)  writes: 6
  $04A0  (Fireball_BoundBoxCtrl)  writes: 1
  $04A2  (Misc_BoundBoxCtrl)  writes: 1
  $04B0  (EnemyBoundingBoxCoord)  writes: 1
  $06B7  (JumpCoinMiscOffset)  writes: 1
  $06C9  (unnamed)  writes: 1
  $06D1  (LakituReappearTimer)  writes: 1
  $06D3  (NumberofGroupEnemies)  writes: 2
  $06DB  (JumpspringForce)  writes: 1
  $06DE  (ChangeAreaTimer)  writes: 2
  $0706  (DiffToHaltJump)  writes: 1
  $0707  (JumpOrigin_Y_HighPos)  writes: 1
  $0708  (JumpOrigin_Y_Position)  writes: 1
  $0709  (VerticalForce)  writes: 2
  $070A  (VerticalForceDown)  writes: 1
  $0713  (FlagpoleSoundQueue)  writes: 1
  $0715  (GameTimerSetting)  writes: 1
  $0727  (TerrainControl)  writes: 1
  $0733  (AreaStyle)  writes: 1
  $073C  (ScreenRoutineTask)  writes: 1
  $0741  (ForegroundScenery)  writes: 1
  $0742  (BackgroundScenery)  writes: 1
  $0748  (CoinTallyFor1Ups)  writes: 2
  $0751  (EntrancePage)  writes: 2
  $0757  (FetchNewGameTimerFlag)  writes: 2
  $0758  (JoypadOverride)  writes: 1
  $075D  (Hidden1UpFlag)  writes: 1
  $0766  (OffScr_WorldNumber)  writes: 1
  $0767  (OffScr_AreaNumber)  writes: 1
  $0786  (JumpspringTimer)  writes: 1
  $0789  (ClimbSideTimer)  writes: 1
  $0795  (ScrollIntervalTimer)  writes: 1
  $07A0  (ScreenTimer)  writes: 2
  $07B4  (Squ2_NoteLenCounter)  writes: 3
  $07B6  (Squ1_NoteLenCounter)  writes: 3
  $07B9  (Tri_NoteLenCounter)  writes: 3
  $07BA  (Noise_BeatLenCounter)  writes: 3
  $07FD  (ContinueWorld)  writes: 1
  $2000  (PPU_CTRL_REG1)  writes: 5
  $2001  (PPU_CTRL_REG2)  writes: 3
  $2003  (PPU_SPR_ADDR)  writes: 1
  $2005  (PPU_SCROLL_REG)  writes: 4
  $2006  (PPU_ADDRESS)  writes: 8
  $2007  (PPU_DATA)  writes: 3
  $4000  (SND_REGISTER)  writes: 6
  $4004  (SND_SQUARE2_REG)  writes: 4
  $4008  (SND_TRIANGLE_REG)  writes: 3
  $400C  (SND_NOISE_REG)  writes: 3
  $4014  (SPR_DMA)  writes: 1
  $4015  (SND_MASTERCTRL_REG)  writes: 12
  $4017  (JOYPAD_PORT2)  writes: 1

ENTRY POINT ANALYSIS
--------------------------------------------------------------------------------
Discovered entry points by type:

INTERRUPT_RESET: 1 entry points
  $8000  Start

INTERRUPT_NMI: 1 entry points
  $8082  NonMaskableInterrupt

JSR_TARGET: 294 entry points
  $8183  PauseRoutine
  $81C8  SpriteShuffler
  $8214  OperModeExecutionTree
  $821E  MoveAllSpritesOffscreen
  $8221  MoveSpritesOffscreen
  $8309  GoContinue
  $8320  DrawMushroomIcon
  $8366  DemoEngine
  $839C  VictoryModeSubroutines
  $84C5  FloateyNumbersRoutine
  ... and 284 more

JUMP_TABLE: 173 entry points
  $822F  TitleScreenMode
  $823F  GameMenuRoutine
  $8386  VictoryMode
  $83A7  SetupVictoryMode
  $83B6  PlayerVictoryWalk
  $83F7  PrintVictoryMessages
  $8463  PlayerEndWorld
  $856E  ScreenRoutines
  $8583  InitScreen
  $8593  SetupIntermediate
  ... and 163 more

